### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  add(description: String!, difficulty: String!, stories: [String!]!, title: String!): Project!
  delete(id: Int!): Project!
  login(email: String!, password: String!): AuthPayload!
  signup(email: String!, name: String!, password: String!): AuthPayload!
  update(description: String, id: Int!, stories: [String!], title: String): Project!
}

type Project {
  createdAt: DateTime!
  description: String!
  difficulty: String!
  id: Int!
  postedBy: User
  stories: [String!]!
  title: String!
}

type ProjectList {
  count: Int!
  id: ID
  projects: [Project!]!
}

input ProjectOrderByInput {
  createdAt: Sort
  description: Sort
  title: Sort
}

type Query {
  allProjects(filter: String, orderBy: [ProjectOrderByInput!], skip: Int, take: Int): ProjectList!
  allUsers: [User!]!
  getUserById(id: Int!): User
  userProjects(id: Int!): [Project!]!
}

enum Sort {
  asc
  desc
}

type User {
  email: String!
  id: Int!
  name: String!
  projects: [Project!]!
}